<snippet>
	<content><![CDATA[
public int[] leftMin(int a[]) {
        int n=a.length;
        int leftMin[] = new int[n];
        leftMin[0] = -1;
        int i=0;
        Stack<Integer>st = new Stack<>();
        st.push(0);
        while (i < n) {
            while (!st.isEmpty() && a[st.peek()] >= a[i])st.pop();
            if (st.isEmpty())leftMin[i] = -1;
            else leftMin[i] = st.peek();
            st.push(i);
            i++;
        }
        return leftMin;
    }
    public int[] rightMin(int a[]) {
        int n=a.length;
        int rightMin[] = new int[n];
        rightMin[n-1] = -1;
        int i=n-2;
        Stack<Integer>st = new Stack<>();
        st.push(n-1);
        while (i >=0) {
            while (!st.isEmpty() && a[st.peek()] >= a[i])st.pop();
            if (st.isEmpty())rightMin[i] = -1;
            else rightMin[i] = st.peek();
            st.push(i);
            i--;
        }
        return rightMin;
    }
    public int[] leftMax(int a[]) {
        int n=a.length;
        int leftMax[] = new int[n];
        leftMax[0] = -1;
        int i=0;
        Stack<Integer>st = new Stack<>();
        st.push(0);
        while (i < n) {
            while (!st.isEmpty() && a[st.peek()] <= a[i])st.pop();
            if (st.isEmpty())leftMax[i] = -1;
            else leftMax[i] = st.peek();
            st.push(i);
            i++;
        }
        return leftMax;
    }
    public int[] rightMax(int a[]) {
        int n=a.length;
        int rightMax[] = new int[n];
        rightMax[n-1] = -1;
        int i=n-2;
        Stack<Integer>st = new Stack<>();
        st.push(n-1);
        while (i >=0) {
            while (!st.isEmpty() && a[st.peek()] <= a[i])st.pop();
            if (st.isEmpty())rightMax[i] = -1;
            else rightMax[i] = st.peek();
            st.push(i);
            i--;
        }
        return rightMax;
    }
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>monotonic stack</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.java</scope>
</snippet>
